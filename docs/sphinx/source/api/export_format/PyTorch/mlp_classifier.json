{
  "mlp_classifier": {
    "graphs": {
      "mlp_classifier": {
        "nodes": {

          "mlp_input_matmul": {
            "parameters": {
              "weight": {
                  "value": "weights.mlp_classifier.graphs.mlp_classifier.nodes.mlp_input_layer.parameters.weight"
                }
            },
            "functions":{
                "Linear_1": {
                  "function": "MatMul",
                  "args":{
                    "A":"in_1",
                    "B":"weight"
                  }
                }
               },
            "input_ports": {
              "in_1": {
                "shape": [196]
              }
            },
            "output_ports": {
              "out_1": {
                "shape": [128],
                "value":"Linear_1"
              }
            }
          },
          "mlp_input_add": {
            "parameters": {
              "bias": {
                  "value":  "weights.mlp_classifier.graphs.mlp_classifier.nodes.mlp_input_layer.parameters.bias"
                }
            },
            "functions":{
                "Bias_Add_1": {
                  "function": "Add",
                  "args":{
                    "A":"in_1",
                    "B":"bias"
                  }
                }
              },
            "input_ports": {
              "in_1": {
                "shape": [128]
              }
            },
            "output_ports": {
              "out_1": {
                "shape": [128],
                "value":"Bias_Add_1"
              }
            }
          },
          "mlp_input_relu": {
            "functions": {
                "Relu_1": {
                  "function": "relu",
                  "args": {
                    "A": "in_1"
                  }
                }
              },
            "input_ports": {
              "in_1": {
                "shape": [128]
              }
            },
            "output_ports": {
              "out_1": {
                "shape": [128],
                "value":"Relu_1"
              }
            }
          },

          "mlp_hidden_matmul": {
            "parameters": {
              "weight": {
                  "value": "weights.mlp_classifier.graphs.mlp_classifier.nodes.mlp_hidden_layer_with_relu.parameters.weight"
                }
            },
            "functions":{
                "Linear_2": {
                  "function": "MatMul",
                  "args":{
                    "A":"in_1",
                    "B":"weight"
                  }
                }
              },
            "input_ports": {
              "in_1": {
                "shape": [128]
              }
            },
            "output_ports": {
              "out_1": {
                "shape": [128],
                "value":"Linear_2"
              }
            }
          },
          "mlp_hidden_add": {
            "parameters": {
              "bias":  {
                  "value": "weights.mlp_classifier.graphs.mlp_classifier.nodes.mlp_hidden_layer_with_relu.parameters.bias"
                }
            },
            "functions":{
                "Bias_Add_2": {
                  "function": "Add",
                  "args":{
                    "A":"in_1",
                    "B":"bias"
                  }
                }
              },
            "input_ports": {
              "in_1": {
                "shape": [128]
              }
            },
            "output_ports": {
              "out_1": {
                "shape": [128],
                "value":"Bias_Add_2"
              }
            }
          },
          "mlp_hidden_relu": {
            "functions": {
                "Relu_2": {
                  "function": "relu",
                  "args": {
                    "A": "in_1"
                  }
                }
              },
            "input_ports": {
              "in_1": {
                "shape": [128]
              }
            },
            "output_ports": {
              "out_1": {
                "shape": [128],
                "value":"Relu_2"
              }
            }
          },

          "mlp_output_matmul": {
            "parameters": {
              "weight":  {
                  "value": "weights.mlp_classifier.graphs.mlp_classifier.nodes.mlp_output_layer.parameters.weight"
                }
            },
            "functions":{
                "Linear_3": {
                  "function": "MatMul",
                  "args": {
                    "A": "in_1",
                    "B": "weight"
                  }
                }
              },
            "input_ports": {
              "in_1": {
                "shape": [128]
              }
            },
            "output_ports": {
              "out_1": {
                "shape": [10],
                "value":"Linear_3"
              }
            }
          },
          "mlp_output_add": {
            "parameters": {
              "bias":  {
                  "value": "weights.mlp_classifier.graphs.mlp_classifier.nodes.mlp_output_layer.parameters.bias"
                }
            },
            "functions":{
                "Bias_Add_3": {
                  "function": "Add",
                  "args": {
                    "A": "in_1",
                    "B": "bias"
                  }
                }
              },
            "input_ports": {
              "in_1": {
                "shape": [10]
              }
            },
            "output_ports": {
              "out_1": {
                "shape": [10],
                "value":"Bias_Add_3"
              }
            }
          },

          "argmax_1": {
            "functions": {
                "argmax_1": {
                  "function": "argmax",
                  "args": {
                    "A": "in_1"
                  }
                }
              },
            "input_ports": {
              "in_1": {
                "shape": [10]
              }
            },
            "output_ports": {
              "out_1": {
                "shape": [1],
                "value":"argmax_1"
              }
            }
          }
        },
        "edges": {
          "edge1": {
            "sender": "mlp_input_matmul",
            "receiver": "mlp_input_add",
            "sender_port": "out_1",
            "receiver_port": "in_1"
          },
          "edge2": {
            "sender": "mlp_input_add",
            "receiver": "mlp_input_relu",
            "sender_port": "out_1",
            "receiver_port": "in_1"
          },
          "edge3": {
            "sender": "mlp_input_relu",
            "receiver": "mlp_hidden_matmul",
            "sender_port": "out_1",
            "receiver_port": "in_1"
          },
          "edge4": {
            "sender": "mlp_hidden_matmul",
            "receiver": "mlp_hidden_add",
            "sender_port": "out_1",
            "receiver_port": "in_1"
          },
          "edge5": {
            "sender": "mlp_hidden_add",
            "receiver": "mlp_hidden_relu",
            "sender_port": "out_1",
            "receiver_port": "in_1"
          },
          "edge6": {
            "sender": "mlp_hidden_relu",
            "receiver": "mlp_output_matmul",
            "sender_port": "out_1",
            "receiver_port": "in_1"
          },
          "edge7": {
            "sender": "mlp_output_matmul",
            "receiver": "mlp_output_add",
            "sender_port": "out_1",
            "receiver_port": "in_1"
          },
          "edge8": {
            "sender": "mlp_output_add",
            "receiver": "argmax_1",
            "sender_port": "out_1",
            "receiver_port": "in_1"
          }
        }
        }
      }
    }
}
