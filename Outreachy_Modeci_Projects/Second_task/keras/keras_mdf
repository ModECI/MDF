digraph "Implementing Keras in MDF" {
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"input layer" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>input layer</b></td></tr><tr><td><font color="#1666ff">input_layer</font> = [[0. ... 1.] ... [1. ... 1.]] (NP (3, 3) float64)</td></tr><tr><td><font color="#cc3355">output</font> = <font color="#1666ff">input_layer</font> </td></tr></table>>]
	node [color="#cccccc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	dense_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense_layer</b></td></tr><tr><td><i>color = .8 .8 .8</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">dense_weight</font> = [[ 0.14365363 ... -0.21373111] ... [-0.03864592 ... -0.63166916]] (NP (3, 12) float32)</td></tr><tr><td><font color="#1666ff">dense_bias</font> = [0. ... 0.] (NP (12,) float32)</td></tr><tr><td><font color="#1666ff">feedForward</font> = (<font color="#188855">input</font> @ <font color="#1666ff">dense_weight</font>) + <font color="#1666ff">dense_bias</font></td></tr><tr><td><font color="#cc3355">dense_output</font> = <font color="#1666ff">feedForward</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	dense_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense_activation</b></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">relu</font> = <font color="#188855">input</font>*<font color="#188855">input</font><br/><i>test: </i>IF <font color="#1666ff">relu</font> &gt; 0 THEN <font color="#1666ff">relu</font>=<font color="#1666ff">relu</font></td></tr><tr><td><font color="#cc3355">activation_1</font> = <font color="#1666ff">relu</font> </td></tr></table>>]
	node [color="#cccccc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	dense_1_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense_1_layer</b></td></tr><tr><td><i>color = .8 .8 .8</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">dense_1_weight</font> = [[ 0.17694336 ... -0.46126378] ... [ 0.5163044  ... -0.10163343]] (NP (12, 8) float32)</td></tr><tr><td><font color="#1666ff">dense_1_bias</font> = [-0.03108151 ... -0.01657922] (NP (8,) float32)</td></tr><tr><td><font color="#1666ff">feedForward</font> = (<font color="#188855">input</font> @ <font color="#1666ff">dense_1_weight</font>) + <font color="#1666ff">dense_1_bias</font></td></tr><tr><td><font color="#cc3355">dense_1_output</font> = <font color="#1666ff">feedForward</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	dense_1_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense_1_activation</b></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">relu</font> = <font color="#188855">input</font>*<font color="#188855">input</font><br/><i>test: </i>IF <font color="#1666ff">relu</font> &gt; 0 THEN <font color="#1666ff">relu</font>=<font color="#1666ff">relu</font></td></tr><tr><td><font color="#cc3355">activation_2</font> = <font color="#1666ff">relu</font> </td></tr></table>>]
	node [color="#cccccc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	dense_2_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense_2_layer</b></td></tr><tr><td><i>color = .8 .8 .8</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">dense_2_weight</font> = [[ 0.23226555] ... [-0.6244166 ]] (NP (8, 1) float32)</td></tr><tr><td><font color="#1666ff">dense_2_bias</font> = [0.03699711] (NP (1,) float32)</td></tr><tr><td><font color="#1666ff">feedForward</font> = (<font color="#188855">input</font> @ <font color="#1666ff">dense_2_weight</font>) + <font color="#1666ff">dense_2_bias</font></td></tr><tr><td><font color="#cc3355">dense_2_output</font> = <font color="#1666ff">feedForward</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	dense_2_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense_2_activation</b></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">sigmoid</font> = 1/(1 + (2.71828**(-<font color="#188855">input</font>)))</td></tr><tr><td><font color="#cc3355">activation_2</font> = <font color="#1666ff">sigmoid</font> </td></tr></table>>]
	"input layer" -> dense_layer [label=<edge_input layer_dense_layer (<font color="#cc3355">output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense_layer -> dense_activation [label=<edge_dense_layer_dense_activation (<font color="#cc3355">dense_output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense_activation -> dense_1_layer [label=<edge_dense_activation_dense_1_layer (<font color="#cc3355">activation_1</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense_1_layer -> dense_1_activation [label=<edge_dense_1_layer_dense_1_activation (<font color="#cc3355">dense_1_output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense_1_activation -> dense_2_layer [label=<edge_dense_1_activation_dense_2_layer (<font color="#cc3355">activation_2</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense_2_layer -> dense_2_activation [label=<edge_dense_2_layer_dense_2_activation (<font color="#cc3355">dense_2_output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
}
