digraph TAO_GRAPH {
	graph [rankdir=LR]
	node [color="#00cc00" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	A [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>A</b></td></tr><tr><td><i>color = 0 .8 0</i></td></tr><tr><td><font color="#1666ff">increment</font> = 10.0</td></tr><tr><td><font color="#ffa1d">condition</font> = <b>A</b> will <b>Always</b> run</td></tr><tr><td><font color="#cc3355">output</font> = <font color="#1666ff">increment</font> </td></tr></table>>]
	node [color="#cc0000" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	B [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>B</b></td></tr><tr><td><i>color = .8 0 0</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">u</font> = 1.2</td></tr><tr><td><font color="#1666ff">v</font> = 3</td></tr><tr><td><font color="#1666ff">simple_exp</font> = <font color="#188855">input</font> * <font color="#1666ff">u</font> - <font color="#1666ff">v</font></td></tr><tr><td><font color="#ffa1d">condition</font> = <b>B</b> will run every <b>3</b> calls of <b>A</b></td></tr><tr><td><font color="#cc3355">output</font> = <font color="#1666ff">simple_exp</font> </td></tr></table>>]
	node [color="#cc0000" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	B [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>B</b></td></tr><tr><td><i>color = .8 0 0</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">u</font> = 1.2</td></tr><tr><td><font color="#1666ff">v</font> = 3</td></tr><tr><td><font color="#1666ff">simple_exp</font> = <font color="#188855">input</font> * <font color="#1666ff">u</font> - <font color="#1666ff">v</font></td></tr><tr><td><font color="#ffa1d">condition</font> = <b>B</b> will run every <b>3</b> calls of <b>A</b></td></tr><tr><td><font color="#cc3355">output</font> = <font color="#1666ff">simple_exp</font> </td></tr></table>>]
	node [color="#00cc00" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	C [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>C</b></td></tr><tr><td><i>color = 0 .8 0</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">y</font> = 8.2</td></tr><tr><td><font color="#1666ff">u</font> = 15</td></tr><tr><td><font color="#1666ff">simple_eq</font> = <font color="#1666ff">y</font>**2 + 2*<font color="#1666ff">u</font></td></tr><tr><td><font color="#ffa1d">condition</font> = <b>C</b> will run every <b>4</b> calls of <b>B</b></td></tr><tr><td><font color="#cc3355">output</font> = <font color="#1666ff">simple_eq</font> </td></tr></table>>]
	node [color="#00cc00" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	C [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>C</b></td></tr><tr><td><i>color = 0 .8 0</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">y</font> = 8.2</td></tr><tr><td><font color="#1666ff">u</font> = 15</td></tr><tr><td><font color="#1666ff">simple_eq</font> = <font color="#1666ff">y</font>**2 + 2*<font color="#1666ff">u</font></td></tr><tr><td><font color="#ffa1d">condition</font> = <b>C</b> will run every <b>4</b> calls of <b>B</b></td></tr><tr><td><font color="#cc3355">output</font> = <font color="#1666ff">simple_eq</font> </td></tr></table>>]
	A -> B [label=<edge_A_B (<font color="#cc3355">output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	B -> C [label=<edge_B_C (<font color="#cc3355">output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
}
