name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
  release:
    types:
      - published

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - uses: pre-commit/action@v3.0.1
      with:
        extra_args: --hook-stage manual --all-files

  checks:
    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12"]
        runs-on: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install HDF5 for pytables on macos-14/latest
      if: ${{ matrix.runs-on == 'macos-latest' }}
      run: |
        brew install hdf5

    - name: Install graphviz
      uses: ts-graphviz/setup-graphviz@v2
      with:
        # Skip to run brew update command on macOS.
        macos-skip-brew-update: 'true' # default false

    - name: Test core package
      run: |
        uv sync --dev
        uv run pytest -m coremdf tests/

    - name: Version info for optional installed packages
      run: |
          pip list

    - name: Test interface ACT-R
      run: |
        uv sync --extra "actr" --dev
        uv run pytest -v -m "actr" tests/

    - name: Test interface PyTorch
      run: |
        uv sync --extra "optional" --dev
        uv run pytest -v -m "pytorch" tests/

    - name: Test interface NeuroML
      run: |
        uv sync --extra "neuroml" --dev
        uv run pytest -v -m "neuroml" tests/

    - name: Test interface TensorFlow
      run: |
        uv sync --extra "tensorflow" --dev
        uv run pytest -v -m "tensorflow" tests/

    - name: Test interface PsyNeuLink
      run: |
        uv sync --extra "psyneulink" --dev
        uv run pytest -v -m "psyneulink" tests/

    - name: Build Documentation
      run: |
        uv sync --extra "docs" --dev
        cd docs
        uv run generate.py
        cd sphinx
        make clean
        make html

    - name: Final version info for optional installed packages
      run: |
          uv pip list

  dist:
    name: Distribution build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build sdist and wheel
      run: pipx run --spec build pyproject-build

    - uses: actions/upload-artifact@v4
      with:
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.4.1
      if: github.event_name == 'release' && github.event.action == 'published'
      with:
        user: __token__
        # Remember to generate this and set it in "GitHub Secrets"
        password: ${{ secrets.pypi_password }}
