digraph "Predictions using converted Keras model using mdf" {
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"input layer" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>input layer</b></td></tr><tr><td><font color="#1666ff">input_layer</font> = [[6.  ... 1.6] ... [5.4 ... 0.4]] (NP (20, 4) float64)</td></tr><tr><td><font color="#cc3355">output</font> = <font color="#1666ff">input_layer</font> </td></tr></table>>]
	node [color="#00cccc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	first_layer_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>first_layer_layer</b></td></tr><tr><td><i>color = .0 .8 .8</i></td></tr><tr><td><font color="#188855">input_layer</font> </td></tr><tr><td><font color="#1666ff">first_layer_weight</font> = [[ 0.19172065 ... -0.27633098] ... [-0.03538112 ...  0.32512373]] (NP (4, 32) float32)</td></tr><tr><td><font color="#1666ff">first_layer_bias</font> = [0.02607815 ... 0.        ] (NP (32,) float32)</td></tr><tr><td><font color="#1666ff">first_layer_equation</font> = (<font color="#188855">input_layer</font> @ <font color="#1666ff">first_layer_weight</font>) + <font color="#1666ff">first_layer_bias</font></td></tr><tr><td><font color="#cc3355">first_layer_output</font> = <font color="#1666ff">first_layer_equation</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	first_layer_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>first_layer_activation</b></td></tr><tr><td><font color="#188855">first_layer_output</font> </td></tr><tr><td><font color="#1666ff">relu</font> = <font color="#188855">first_layer_output</font> * <font color="#188855">first_layer_output</font><br/><i>relu_test: </i>IF <font color="#1666ff">relu</font> &gt; 0 THEN <font color="#1666ff">relu</font>=<font color="#1666ff">relu</font></td></tr><tr><td><font color="#cc3355">activation_1</font> = <font color="#1666ff">relu</font> </td></tr></table>>]
	node [color="#cc66cc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	second_layer_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>second_layer_layer</b></td></tr><tr><td><i>color = .8 .4 .8</i></td></tr><tr><td><font color="#188855">activation_1</font> </td></tr><tr><td><font color="#1666ff">second_layer_weight</font> = [[-0.1375565  ... -0.20650077] ... [-0.01683307 ... -0.00131196]] (NP (32, 64) float32)</td></tr><tr><td><font color="#1666ff">second_layer_bias</font> = [0.01254892 ... 0.        ] (NP (64,) float32)</td></tr><tr><td><font color="#1666ff">second_layer_equation</font> = (<font color="#188855">activation_1</font> @ <font color="#1666ff">second_layer_weight</font>)                       + <font color="#1666ff">second_layer_bias</font></td></tr><tr><td><font color="#cc3355">second_layer_output</font> = <font color="#1666ff">second_layer_equation</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	second_layer_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>second_layer_activation</b></td></tr><tr><td><font color="#188855">second_layer_output</font> </td></tr><tr><td><font color="#1666ff">relu</font> = <font color="#188855">second_layer_output</font> * <font color="#188855">second_layer_output</font><br/><i>relu_test: </i>IF <font color="#1666ff">relu</font> &gt; 0 THEN <font color="#1666ff">relu</font>=<font color="#1666ff">relu</font></td></tr><tr><td><font color="#cc3355">activation_2</font> = <font color="#1666ff">relu</font> </td></tr></table>>]
	node [color="#664ccc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	third_layer_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>third_layer_layer</b></td></tr><tr><td><i>color = .4 .3 .8</i></td></tr><tr><td><font color="#188855">activation_2</font> </td></tr><tr><td><font color="#1666ff">third_layer_weight</font> = [[ 0.10523863 ... -0.04983197] ... [-0.05182004 ...  0.17050166]] (NP (64, 64) float32)</td></tr><tr><td><font color="#1666ff">third_layer_bias</font> = [-0.00523273 ...  0.        ] (NP (64,) float32)</td></tr><tr><td><font color="#1666ff">third_layer_equation</font> = (<font color="#188855">activation_2</font> @ <font color="#1666ff">third_layer_weight</font>)                       + <font color="#1666ff">third_layer_bias</font></td></tr><tr><td><font color="#cc3355">third_layer_output</font> = <font color="#1666ff">third_layer_equation</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	third_layer_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>third_layer_activation</b></td></tr><tr><td><font color="#188855">third_layer_output</font> </td></tr><tr><td><font color="#1666ff">relu</font> = <font color="#188855">third_layer_output</font> * <font color="#188855">third_layer_output</font><br/><i>relu_test: </i>IF <font color="#1666ff">relu</font> &gt; 0 THEN <font color="#1666ff">relu</font>=<font color="#1666ff">relu</font></td></tr><tr><td><font color="#cc3355">activation_3</font> = <font color="#1666ff">relu</font> </td></tr></table>>]
	node [color="#b2e5cc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	fourth_layer_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>fourth_layer_layer</b></td></tr><tr><td><i>color = .7 .9 .8</i></td></tr><tr><td><font color="#188855">activation_3</font> </td></tr><tr><td><font color="#1666ff">fourth_layer_weight</font> = [[0.18464226] ... [0.11663398]] (NP (64, 1) float32)</td></tr><tr><td><font color="#1666ff">fourth_layer_bias</font> = [-0.00492034] (NP (1,) float32)</td></tr><tr><td><font color="#1666ff">fourth_layer_equation</font> = (<font color="#188855">activation_3</font> @ <font color="#1666ff">fourth_layer_weight</font>)                       + <font color="#1666ff">fourth_layer_bias</font></td></tr><tr><td><font color="#cc3355">fourth_layer_output</font> = <font color="#1666ff">fourth_layer_equation</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	fourth_layer_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>fourth_layer_activation</b></td></tr><tr><td><font color="#188855">fourth_layer_output</font> </td></tr><tr><td><font color="#1666ff">sigmoid</font> = 1/(1 + (2.72 ** (-<font color="#188855">fourth_layer_output</font>)))</td></tr><tr><td><font color="#cc3355">activation_4</font> = <font color="#1666ff">sigmoid</font> </td></tr></table>>]
	"input layer" -> first_layer_layer [label=<edge_input layer_first_layer_layer (<font color="#cc3355">output</font> -&gt; <font color="#188855">input_layer</font>)> arrowhead=empty]
	first_layer_layer -> first_layer_activation [label=<edge_first_layer_layer_first_layer_activation (<font color="#cc3355">first_layer_output</font> -&gt; <font color="#188855">first_layer_output</font>)> arrowhead=empty]
	first_layer_activation -> second_layer_layer [label=<edge_first_layer_activation_second_layer_layer (<font color="#cc3355">activation_1</font> -&gt; <font color="#188855">activation_1</font>)> arrowhead=empty]
	second_layer_layer -> second_layer_activation [label=<edge_second_layer_layer_second_layer_activation (<font color="#cc3355">second_layer_output</font> -&gt; <font color="#188855">second_layer_output</font>)> arrowhead=empty]
	second_layer_activation -> third_layer_layer [label=<edge_second_layer_activation_third_layer_layer (<font color="#cc3355">activation_2</font> -&gt; <font color="#188855">activation_2</font>)> arrowhead=empty]
	third_layer_layer -> third_layer_activation [label=<edge_third_layer_layer_third_layer_activation (<font color="#cc3355">third_layer_output</font> -&gt; <font color="#188855">third_layer_output</font>)> arrowhead=empty]
	third_layer_activation -> fourth_layer_layer [label=<edge_third_layer_activation_fourth_layer_layer (<font color="#cc3355">activation_3</font> -&gt; <font color="#188855">activation_3</font>)> arrowhead=empty]
	fourth_layer_layer -> fourth_layer_activation [label=<edge_fourth_layer_layer_fourth_layer_activation (<font color="#cc3355">fourth_layer_output</font> -&gt; <font color="#188855">fourth_layer_output</font>)> arrowhead=empty]
}
